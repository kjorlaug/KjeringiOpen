@using EmitReaderLib.Model;
@using KjeringiData;

@foreach (ParticipantClass c in TheRace.Instance.Classes.Where(c => !c.Test).OrderBy(c => c.Sequence))
{
    <h3>@c.Name</h3>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Plass</th>
                <th>#</th>
                <th>Namn</th>
                <th>1. etappe</th>
                <th>2. etappe</th>
                <th>3. etappe</th>
                <th>4. etappe</th>
                <th>Totalttid</th>
                <th><!-- Bedrift/premie--></th>
            </tr>
        </thead>
        <tbody>
            @{
    var res = TheRace.Instance.GetResults(c.Id.ToString());
    var finish = TheRace.Instance.TimeStations.Where(ts => ts.Finish = true).First();

    // Company class?
    var prices = c.Company ? res : res.Where(p => !p.IsCompany);
    int priceCount = (int)Math.Ceiling(prices.Count() / 3.0);
    var pricesSoFar = 0;
            }
            @foreach (Participant p in res)
            {
                <tr>
                    <td>@if (p.Finished) {
                            @p.Positions[finish.Id][c.Id]
                    } </td>
                    <td>@p.Startnumber</td>
                    <td>@p.Name</td>
                    <td>
                        @if (!p.IsSuper) { 
                            @p.TeamMembers[0]
                        }
                        @if (p.Splits.Exists(r => r.Leg.Equals("1") && r.Class.Equals(c.Name))) { 
                            @p.Splits.Find(r => r.Leg.Equals("1") && r.Class.Equals(c.Name)).Time
                        }
                    </td>
                    <td>
                        @if (!p.IsSuper)
                        {
                            @p.TeamMembers[1]
                        }
                        @if (p.Splits.Exists(r => r.Leg.Equals("2") && r.Class.Equals(c.Name)))
                        {
                            @p.Splits.Find(r => r.Leg.Equals("2") && r.Class.Equals(c.Name)).Time
                        }
                    </td>
                    <td>
                        @if (!p.IsSuper)
                        {
                            @p.TeamMembers[2]
                        }
                        @if (p.Splits.Exists(r => r.Leg.Equals("3") && r.Class.Equals(c.Name)))
                        {
                            @p.Splits.Find(r => r.Leg.Equals("3") && r.Class.Equals(c.Name)).Time
                        }
                    </td>
                    <td>
                        @if (!p.IsSuper)
                        {
                            @p.TeamMembers[3]
                        }
                        @if (p.Splits.Exists(r => r.Leg.Equals("4") && r.Class.Equals(c.Name)))
                        {
                            @p.Splits.Find(r => r.Leg.Equals("4") && r.Class.Equals(c.Name)).Time
                        }
                    </td>
                    <td>
                        @p.TotalTime
                    </td>
                    <td>
                        @if (p.Finished && ((p.IsCompany && c.Company) || !c.Company))
                        {
                            if (priceCount > pricesSoFar++)
                            {
                                <img src="~/Content/Images/award52.png" height="24"/>
                            }
                        }
                        @if (!c.Company && p.IsCompany)
                        {
                            <img src="~/Content/Images/finance-and-business4.png" height="24" />
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <span class="page-break-after: always;"></span>
}

<div>Icons made by <a href="http://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a>             is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0</a></div>
<br/>

