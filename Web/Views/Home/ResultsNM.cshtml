@using EmitReaderLib.Model;
@using KjeringiData;

@foreach (ParticipantClass c in TheRace.Instance.Classes.Where(c => !c.Test && c.Id.StartsWith("NM")).OrderBy(c => c.Sequence))
{
    <h3>Norgescup Fjelltelemark Kjeringi Open - @c.Name</h3>

    <table class="table table-striped" style="page-break-after: always;">
        <thead>
            <tr>
                <th>#</th>
                <th>Namn</th>
                <th>Tid</th>
                <th><!-- Bedrift/premie--></th>
            </tr>
        </thead>
        <tbody>
            @{
    var res = TheRace.Instance.GetResults(c.Id.ToString());
    var finish = TheRace.Instance.TimeStations.Where(ts => ts.Finish = true).First();

    var leg1 = TheRace.Instance.TimeStations.Where(ts => ts.Official && ts.Sequence == 1).First();
    var leg2 = TheRace.Instance.TimeStations.Where(ts => ts.Official && ts.Sequence == 2).First();
    var leg3 = TheRace.Instance.TimeStations.Where(ts => ts.Official && ts.Sequence == 3).First();
    var leg4 = TheRace.Instance.TimeStations.Where(ts => ts.Finish).First();

    // Company class?
    int priceCount = (int)Math.Ceiling(res.Count() / 3.0);
    var pricesSoFar = 0;
            }
            @foreach (Participant p in res)
            {
                <tr>
                <td>@p.Startnumber</td>
                <td>@p.Name</td>
                <td>
                    @if (!p.IsSuper)
                    {
                        @p.TeamMembers[0]
                        <br/>
                    }
                    @if (p.Splits.Exists(r => r.Leg.Equals(leg1.Name) && r.Class.Equals(c.Name)))
                    {
                        @p.Splits.Find(r => r.Leg.Equals(leg1.Name) && r.Class.Equals(c.Name)).Time
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>
}

