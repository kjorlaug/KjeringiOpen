@{
    ViewBag.Title = "Status page";
}

<div class="row">
    <div class="col-md-4" id="systems-list">
        <h2>System online:</h2>
        <ul data-bind="foreach: systems">
            <li class="sys-box"><span class="sys-box-name" data-bind="text: sysname"></span></li>
        </ul>
    </div>
    <div class="col-md-4">
    </div>
    <div class="col-md-4">
    </div>
</div>

<script type="text/javascript" src="@Url.Content("~/scripts/model.js")"></script>
<script type="text/javascript">

    $(document).ready(function () {
        var users = new Kjeringi.connectedSystemViewModel();
        var currentUser = new Kjeringi.system(@Html.Raw(Json.Encode("Statusscreen - " + Request.UserHostName))); // The username chose by the user is stored in the model

        // Proxy creation
        var chatHub = $.connection.resultatServiceHub; // chatHub is the name of the Hub as declared in server side code
        chatHub.state.username = currentUser.sysname; // This is the round-trip state

        //// Client-side event handlers, as declared inside the  Hub
        //chatHub.client.onMessageReceived = function (message) {
        //    var date = new Date();
        //    date.setISO8601(message.Timestamp);
        //    chat.messages.push(new chatR.chatMessage(message.Username, message.Content, date));//new Date(message.Timestamp)));
        //    $("#chat-list").scrollTo('max');
        //}

        chatHub.client.leaves = function (userId, username, timestamp) {
            var disconnectedUser = new Kjeringi.system(username, userId);
            users.customRemove(disconnectedUser);
        }

        chatHub.client.joins = function (userId, username, timestamp) {
            var connectedUser = new Kjeringi.system(username, userId);
            users.systems.push(connectedUser);
        }

        //function sendMessageContent() {
        //    var content = $("#compose-box").val();
        //    if (content != "" && content != null) {
        //        var msg = new chatR.chatMessage(currentUser.username, content);
        //        chatHub.server.send(msg).done(function () {
        //            $("#compose-box").val("");
        //        }).fail(function (e) {
        //            alert("Could not connect to server");
        //        });
        //    }
        //}

        //$("#send-btn").click(function () {
        //    sendMessageContent();
        //});

        //// Handles Enter keystroke press event
        //$('#compose-box').keypress(function (e) {
        //    if (e.which == 13) {
        //        sendMessageContent();
        //    }
        //});

        ko.applyBindings(users, $("#systems-list")[0]);
        //ko.applyBindings(chat, $("#chat-list")[0]);

        // Step 1: Start the connection
        // Step 2: Get all currenlty connected users
        // Step 3: Join to the chat and nmotify all the clients (me included) that there is a new user connected
        $.connection.hub.start()
                    .done(function () {
                        chatHub.server.getConnectedSystems()
                                    .done(function (connectedUsers) {
                                        ko.utils.arrayForEach(connectedUsers, function (item) {
                                            users.systems.push(new Kjeringi.system(item.SystemName, item.Id));
                                        });
                                    }).done(function () {
                                        chatHub.server.joined();
                                    });
                    });
    });

</script>